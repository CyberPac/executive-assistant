version: '3.8'

services:
  # Personal Executive Assistant System
  pea-system:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: pea-executive-assistant
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PEA_ENV=production
      - PEA_AGENTS=15
      - PEA_TOPOLOGY=hierarchical
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://postgres:password@postgres:5432/pea_system
    depends_on:
      - redis
      - postgres
      - minio
    volumes:
      - pea-logs:/app/logs
      - pea-performance:/app/performance-logs
      - pea-benchmarks:/app/benchmarks/results
    restart: unless-stopped
    networks:
      - pea-network

  # Redis for agent coordination and caching
  redis:
    image: redis:7-alpine
    container_name: pea-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - pea-network
    command: redis-server --appendonly yes --maxmemory 2gb --maxmemory-policy allkeys-lru

  # PostgreSQL for persistent data
  postgres:
    image: postgres:15-alpine
    container_name: pea-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=pea_system
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ../scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    restart: unless-stopped
    networks:
      - pea-network

  # MinIO for object storage (documents, media)
  minio:
    image: minio/minio:latest
    container_name: pea-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password123
    volumes:
      - minio-data:/data
    restart: unless-stopped
    networks:
      - pea-network
    command: server /data --console-address ":9001"

  # Elasticsearch for search and analytics
  elasticsearch:
    image: elasticsearch:8.8.0
    container_name: pea-elasticsearch
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    restart: unless-stopped
    networks:
      - pea-network

  # Claude Flow MCP Integration
  claude-flow-mcp:
    image: node:18-alpine
    container_name: pea-claude-flow-mcp
    working_dir: /app
    volumes:
      - ../:/app
    environment:
      - NODE_ENV=production
    networks:
      - pea-network
    command: ["npx", "claude-flow@alpha", "mcp", "start", "--port", "8080"]
    restart: unless-stopped

  # Monitoring and observability
  prometheus:
    image: prom/prometheus:latest
    container_name: pea-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ../monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    restart: unless-stopped
    networks:
      - pea-network

  grafana:
    image: grafana/grafana:latest
    container_name: pea-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ../monitoring/grafana-dashboards:/etc/grafana/provisioning/dashboards
    restart: unless-stopped
    networks:
      - pea-network

volumes:
  pea-logs:
  pea-performance:
  pea-benchmarks:
  redis-data:
  postgres-data:
  minio-data:
  elasticsearch-data:
  prometheus-data:
  grafana-data:

networks:
  pea-network:
    driver: bridge